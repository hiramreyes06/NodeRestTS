Primero debemos crear un metodo al modelo del schema de la bd, para poder
ejecutarlo al usar el modelo: en el modelo Usuario.ts importamos 
import bcrypt from 'bcryptjs';

le agregamos al modelo que añada el metodo

//De eesta forma le creamos un metodo al modelo del schema de la bd
usuarioSchema.method('compararPassword', function(password :string =''): boolean{
 //Esto retorna un boolean si las password recibida es igual
    return bcrypt.compareSync(password, this.password);
});

Nos debemos de asegurar de configurar el tsconfig.json y dejarle esto:para que no
nos de error en el this en el metodo del schema
 "noImplicitThis": false,      

y agregamos el metodo a la interface

//Asi le creamos un metodo a un schema de mongo
compararPassword(password: string):boolean;

Despues en las rutas de usuarios creamos un post para login

suarioRoutes.post(`/login`, (req:Request, res: Response) =>{

const body= req.body;

Usuario.findOne({ email: body.email}, (err, usuarioDB)=>{

if( err) throw new err;

if( ! usuarioDB){

  return res.json({
      ok:false,
      message:'Usuario/contraseña no encontrada'  
  });

  
}


if( usuarioDB?.compararPassword(body.password)){

    res.json({
        token:'asdasd',
        usuarioDB
    });

  }
  else{

    res.json({
        ok:false,
        message:'usuario/Contraseña no son correctos'
    })

  }

}  );
